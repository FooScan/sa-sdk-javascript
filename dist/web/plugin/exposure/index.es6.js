function wrapPluginInitFn(e,t,r){var n=e.init;return t&&(e.name=t),e.init=function(t,i){if(t.readyState&&t.readyState.state>=3||!t.on)return o();function o(){n.call(e,t,i)}t.on(r,o)},e}var sd,_,log,EXPOSURE_ATTR_EVENT_NAME="data-sensors-exposure-event-name",exposureIntersection={},exposureEleOption=[],exposureConfig={area_rate:0,stay_duration:0,repeated:!0};function isSupport(){return("MutationObserver"in window||"WebKitMutationObserver"in window||"MozMutationObserver"in window)&&"IntersectionObserver"in window}function formatConfig(e){var t={};return _.each(e,function(r,n){switch(n){case"area_rate":r=Number(r),!isNaN(r)&&r>=0&&r<=1?t.area_rate=r:log("parameter config.area_rate error. config:",e);break;case"stay_duration":r=Number(r),!isNaN(r)&&r>=0?t.stay_duration=r:log("parameter config.stay_duration error. config:",e);break;case"repeated":"false"===r||!1===r||"true"===r||!0===r?t.repeated=r:log("parameter config.repeated error. config:",e)}}),t}var exposurePlugin={isReady:!1,init:function(e){if(isSupport()){var t=this;_.isObject(e)&&(exposureConfig=_.extend(exposureConfig,formatConfig(e))),_.bindReady(function(){var e=t.getElesByEventName();t.addObserveByNodes(e),mutation.init()}),sd.ee.spa.on("switch",function(e){if(e===location.href)return!1;t.clear();var r=t.getElesByEventName();t.addObserveByNodes(r)}),_.listenPageState({visible:function(){t.start()},hidden:function(){t.stop()}}),this.isReady=!0}else log("The current browser does not support the element exposure key API, and the element exposure plugin initialization failed.")},getElesByEventName:function(e){return(e=e||document).querySelectorAll("["+EXPOSURE_ATTR_EVENT_NAME+"]")},getEleEventName:function(e){return e.getAttribute(EXPOSURE_ATTR_EVENT_NAME)},getEleAttr:function(e,t){t=t||e.attributes;var r={},n={},i=this.getEleEventName(e);return _.each(t,function(e){var t=e.value;try{var i=e.name.match(/^data-sensors-exposure-property-(.+)/);i&&(r[i[1]]=t)}catch(a){}try{var o=e.name.match(/^data-sensors-exposure-config-(.+)/);if(o)switch(o[1]){case"area_rate":n.area_rate=t;break;case"stay_duration":n.stay_duration=t;break;case"repeated":n.repeated=!1}}catch(a){}}),{eventName:i,config:formatConfig(n),properties:r}},addObserveByNodes:function(e){if(e.length){var t=this;_.each(e,function(e){if(1===e.nodeType&&e.hasAttribute(EXPOSURE_ATTR_EVENT_NAME)){var r=t.getEleAttr(e);r.config=_.extend({},exposureConfig,r.config),r.ele=e,t.addOrUpdateWatchEle(r)}})}},getIntersection:function(e){var t=this;return exposureIntersection[e.area_rate]?exposureIntersection[e.area_rate]:exposureIntersection[e.area_rate]=new IntersectionObserver(function(){t.exposure.apply(t,arguments)},{threshold:e.area_rate})},exposure:function(e){var t=this;_.each(e,function(e){var r=e.target,n=t.getEleOption(r);!1!==e.isIntersecting&&n&&!n.config.isSend?e.intersectionRatio>=n.config.area_rate&&(n.timer&&(clearTimeout(n.timer),n.timer=null),n.timer=setTimeout(function(){var e=r.getBoundingClientRect(),n=t.getEleOption(r);if(e.width&&e.height&&n&&n.eventName&&!n.config.isSend){var i=sd.heatmap.getEleDetail(r);sd.track(n.eventName,_.extend({},i,n.properties)),n.config.isSend=!0,n.config.repeated&&(n.config.isSend=!1)}},1e3*n.config.stay_duration)):n&&n.timer&&(clearTimeout(n.timer),n.timer=null)})},getEleOption:function(e){var t=null;return _.each(exposureEleOption,function(r){e===r.ele&&(t=r)}),t},addOrUpdateWatchEle:function(e){var t=e.ele,r=e.config,n=exposurePlugin.getEleOption(t);if(n)_.extend2Lev(n,e),n.config.repeated&&(n.config.isSend=!1);else{if(!e.eventName)return log("parameter option.eventName error. option:",e),!1;_.isElement(t)||log("parameter element error. option:",e),this.getIntersection(r).observe(t),exposureEleOption.push(e)}},removeWatchEle:function(e){var t=null,r=-1;if(_.each(exposureEleOption,function(n,i){e===n.ele&&(t=n,r=i)}),t){var n=t.config,i=exposureIntersection[n.area_rate];i&&_.isElement(e)&&(i.unobserve(e),t.timer&&(clearTimeout(t.timer),t.timer=null),r>-1&&exposureEleOption.splice(r,1))}},start:function(){_.each(exposureEleOption,function(e){var t=e.config,r=e.ele,n=exposureIntersection[t.area_rate];n&&_.isElement(r)&&n.observe(r)})},stop:function(){_.each(exposureEleOption,function(e){var t=e.config,r=e.ele,n=exposureIntersection[t.area_rate];n&&_.isElement(r)&&(n.unobserve(r),e.timer&&(clearTimeout(e.timer),e.timer=null))})},clear:function(){this.stop(),exposureIntersection={},exposureEleOption=[]}},mutation={mo:null,init:function(){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;this.mo=new e(this.listenNodesChange),this.observe()},observe:function(){this.mo.observe(document.body,{attributes:!0,childList:!0,subtree:!0,attributeOldValue:!0})},listenNodesChange:function(e){_.each(e,function(e){switch(e.type){case"childList":e.removedNodes.length>0?_.each(e.removedNodes,function(e){if(1===e.nodeType){exposurePlugin.removeWatchEle(e);var t=exposurePlugin.getElesByEventName(e);t.length&&_.each(t,function(e){exposurePlugin.removeWatchEle(e)})}}):e.addedNodes.length&&(exposurePlugin.addObserveByNodes(e.addedNodes),_.each(e.addedNodes,function(e){if(1===e.nodeType){var t=exposurePlugin.getElesByEventName(e);exposurePlugin.addObserveByNodes(t)}}));break;case"attributes":if(!e.attributeName)return!1;var t=e.target,r=e.attributeName;if(!_.isString(r)||r.indexOf("data-sensors-exposure")<0)return;var n=exposurePlugin.getEleAttr(t,[{name:r}]),i=exposurePlugin.getEleOption(t)||{ele:t,config:exposureConfig},o=_.extend2Lev({},i,n);Object.prototype.hasOwnProperty.call(o,"eventName")?exposurePlugin.addOrUpdateWatchEle(o):exposurePlugin.removeWatchEle(t)}})}},Exposure={exposureViews:exposureEleOption,init:function(e,t){if(!e||sd)return!1;_=(sd=e)._,log=sd.log,exposurePlugin.init(t),log("Exposure Plugin initialized successfully")},addExposureView:function(e,t){if(exposurePlugin.isReady)if(_.isElement(e)){var r={ele:e,config:_.isObject(t.config)?formatConfig(t.config):{},eventName:t.eventName,properties:_.isObject(t.properties)?t.properties:{}},n=exposurePlugin.getEleOption(e);if(n){if(n=_.extend2Lev({},n,r),!_.isString(n.eventName)||!n.eventName)return void log("parameter option.eventName error. option",t);n.config.repeated&&(n.config.isSend=!1)}else{if(!_.isString(r.eventName)||!r.eventName)return void log("parameter option.eventName error. option",t);exposurePlugin.addOrUpdateWatchEle(r)}}else log("parameter element error.");else log("Exposure Plugin uninitialized.")},removeExposureView:function(e){exposurePlugin.isReady?_.isElement(e)?exposurePlugin.removeWatchEle(e):log("removeExposureView parameter ele errors."):log("Exposure Plugin uninitialized.")}};wrapPluginInitFn(Exposure,"Exposure","sdkAfterInitPara");export default Exposure;