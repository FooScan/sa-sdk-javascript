!function(){"use strict";function e(e,t,r){var n=e.init;return t&&(e.name=t),e.init=function(t,i){function a(){n.call(e,t,i)}return t.readyState&&t.readyState.state>=3||!t.on?a():void t.on(r,a)},e}function t(){return("MutationObserver"in window||"WebKitMutationObserver"in window||"MozMutationObserver"in window)&&"IntersectionObserver"in window}function r(e){var t={};return i.each(e,function(r,n){switch(n){case"area_rate":r=Number(r),!isNaN(r)&&r>=0&&r<=1?t.area_rate=r:a("parameter config.area_rate error. config:",e);break;case"stay_duration":r=Number(r),!isNaN(r)&&r>=0?t.stay_duration=r:a("parameter config.stay_duration error. config:",e);break;case"repeated":"false"===r||r===!1||"true"===r||r===!0?t.repeated=r:a("parameter config.repeated error. config:",e)}}),t}var n,i,a,o="data-sensors-exposure-event-name",s={},c=[],u={area_rate:0,stay_duration:0,repeated:!0},d={isReady:!1,init:function(e){if(!t())return void a("The current browser does not support the element exposure key API, and the element exposure plugin initialization failed.");var o=this;i.isObject(e)&&(u=i.extend(u,r(e))),i.bindReady(function(){var e=o.getElesByEventName();o.addObserveByNodes(e),l.init()}),n.ee.spa.on("switch",function(e){if(e===location.href)return!1;o.clear();var t=o.getElesByEventName();o.addObserveByNodes(t)}),i.listenPageState({visible:function(){o.start()},hidden:function(){o.stop()}}),this.isReady=!0},getElesByEventName:function(e){return e=e||document,e.querySelectorAll("["+o+"]")},getEleEventName:function(e){return e.getAttribute(o)},getEleAttr:function(e,t){t=t||e.attributes;var n={},a={},o=this.getEleEventName(e);return i.each(t,function(e){var t=e.value;try{var r=e.name.match(/^data-sensors-exposure-property-(.+)/);r&&(n[r[1]]=t)}catch(i){}try{var o=e.name.match(/^data-sensors-exposure-config-(.+)/);if(o)switch(o[1]){case"area_rate":a.area_rate=t;break;case"stay_duration":a.stay_duration=t;break;case"repeated":a.repeated=!1}}catch(i){}}),{eventName:o,config:r(a),properties:n}},addObserveByNodes:function(e){if(e.length){var t=this;i.each(e,function(e){if(1===e.nodeType&&e.hasAttribute(o)){var r=t.getEleAttr(e);r.config=i.extend({},u,r.config),r.ele=e,t.addOrUpdateWatchEle(r)}})}},getIntersection:function(e){var t=null,r=this;return t=s[e.area_rate]?s[e.area_rate]:s[e.area_rate]=new IntersectionObserver(function(){r.exposure.apply(r,arguments)},{threshold:e.area_rate})},exposure:function(e){var t=this;i.each(e,function(e){var r=e.target,a=t.getEleOption(r);return e.isIntersecting===!1||!a||a.config.isSend?void(a&&a.timer&&(clearTimeout(a.timer),a.timer=null)):void(e.intersectionRatio>=a.config.area_rate&&(a.timer&&(clearTimeout(a.timer),a.timer=null),a.timer=setTimeout(function(){var e=r.getBoundingClientRect(),a=t.getEleOption(r);if(e.width&&e.height&&a&&a.eventName&&!a.config.isSend){var o=n.heatmap.getEleDetail(r);n.track(a.eventName,i.extend({},o,a.properties)),a.config.isSend=!0,a.config.repeated&&(a.config.isSend=!1)}},1e3*a.config.stay_duration)))})},getEleOption:function(e){var t=null;return i.each(c,function(r){e===r.ele&&(t=r)}),t},addOrUpdateWatchEle:function(e){var t=e.ele,r=e.config,n=d.getEleOption(t);if(n)i.extend2Lev(n,e),n.config.repeated&&(n.config.isSend=!1);else{if(!e.eventName)return a("parameter option.eventName error. option:",e),!1;i.isElement(t)||a("parameter element error. option:",e);var o=this.getIntersection(r);o.observe(t),c.push(e)}},removeWatchEle:function(e){var t=null,r=-1;if(i.each(c,function(n,i){e===n.ele&&(t=n,r=i)}),t){var n=t.config,a=s[n.area_rate];a&&i.isElement(e)&&(a.unobserve(e),t.timer&&(clearTimeout(t.timer),t.timer=null),r>-1&&c.splice(r,1))}},start:function(){i.each(c,function(e){var t=e.config,r=e.ele,n=s[t.area_rate];n&&i.isElement(r)&&n.observe(r)})},stop:function(){i.each(c,function(e){var t=e.config,r=e.ele,n=s[t.area_rate];n&&i.isElement(r)&&(n.unobserve(r),e.timer&&(clearTimeout(e.timer),e.timer=null))})},clear:function(){this.stop(),s={},c=[]}},l={mo:null,init:function(){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;this.mo=new e(this.listenNodesChange),this.observe()},observe:function(){this.mo.observe(document.body,{attributes:!0,childList:!0,subtree:!0,attributeOldValue:!0})},listenNodesChange:function(e){i.each(e,function(e){switch(e.type){case"childList":e.removedNodes.length>0?i.each(e.removedNodes,function(e){if(1===e.nodeType){d.removeWatchEle(e);var t=d.getElesByEventName(e);t.length&&i.each(t,function(e){d.removeWatchEle(e)})}}):e.addedNodes.length&&(d.addObserveByNodes(e.addedNodes),i.each(e.addedNodes,function(e){if(1===e.nodeType){var t=d.getElesByEventName(e);d.addObserveByNodes(t)}}));break;case"attributes":if(!e.attributeName)return!1;var t=e.target,r=e.attributeName;if(!i.isString(r)||r.indexOf("data-sensors-exposure")<0)return;var n=d.getEleAttr(t,[{name:r}]),a=d.getEleOption(t)||{ele:t,config:u},o=i.extend2Lev({},a,n);Object.prototype.hasOwnProperty.call(o,"eventName")?d.addOrUpdateWatchEle(o):d.removeWatchEle(t)}})}},v={exposureViews:c,init:function(e,t){return!(!e||n)&&(n=e,i=n._,a=n.log,d.init(t),void a("Exposure Plugin initialized successfully"))},addExposureView:function(e,t){if(!d.isReady)return void a("Exposure Plugin uninitialized.");if(!i.isElement(e))return void a("parameter element error.");var n={ele:e,config:i.isObject(t.config)?r(t.config):{},eventName:t.eventName,properties:i.isObject(t.properties)?t.properties:{}},o=d.getEleOption(e);if(o){if(o=i.extend2Lev({},o,n),!i.isString(o.eventName)||!o.eventName)return void a("parameter option.eventName error. option",t);o.config.repeated&&(o.config.isSend=!1)}else{if(!i.isString(n.eventName)||!n.eventName)return void a("parameter option.eventName error. option",t);d.addOrUpdateWatchEle(n)}},removeExposureView:function(e){return d.isReady?i.isElement(e)?void d.removeWatchEle(e):void a("removeExposureView parameter ele errors."):void a("Exposure Plugin uninitialized.")}};return e(v,"Exposure","sdkAfterInitPara"),v}();